package ${package_name}.service.impl;

import com.github.pagehelper.Page;
import com.github.pagehelper.PageHelper;
import ${package_name}.dto.${model}.${Model}ListDTO;
import ${package_name}.dto.${model}.${Model}SaveDTO;
import ${package_name}.dto.${model}.${Model}UpdateDTO;
import ${package_name}.vo.${model}.${Model}VO;
import ${package_name}.mapper.${Model}Mapper;
import ${package_name}.model.${Model};
import ${package_name}.model.${Model}Example;
import ${package_name}.service.${Model}Service;
import ${package_name}.core.enums.ResultEnum;
import ${package_name}.core.resp.Result;
import ${package_name}.core.resp.ResultUtil;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.BeanUtils;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;
import java.util.List;

/**
* ${Model}Service实现
* Created by Nelson on ${ctime}.
*/
@Service
@Transactional
public class ${Model}ServiceImpl implements ${Model}Service {

    private static final Logger LOGGER = LoggerFactory.getLogger(${Model}ServiceImpl.class);

    @Autowired
    ${Model}Mapper ${mapper}Mapper;

    @Override
    public Result save${Model}(${Model}SaveDTO dto) {
        //TODO 封装${Model}

        ${Model} ${model} = new ${Model}();
        BeanUtils.copyProperties(dto, ${model});
        if(${mapper}Mapper.insert(${model}) == 1) {
            return ResultUtil.success();
        }
        return ResultUtil.error(ResultEnum.HANDLE_FAILURE);
    }

    @Override
    public Result delete${Model}(Integer id) {
        if(${mapper}Mapper.deleteById(id) == 1) {
            return ResultUtil.success();
        }
        return ResultUtil.error(ResultEnum.HANDLE_FAILURE);
    }

    @Override
    public Result get${Model}(Integer id) {
        ${Model} ${model} = ${mapper}Mapper.selectById(id);
        if(${model} != null) {
            //TODO 封装返回的内容
            ${Model}VO result = new ${Model}VO();
            return ResultUtil.success(result);
        }
        return ResultUtil.error(ResultEnum.FAILURE);
    }

    @Override
    public Result list${Model}(${Model}ListDTO dto, int pageNo, int pageSize) {
        Page<${Model}> page = PageHelper.startPage(pageNo, pageSize);
        //List<${Model}> ${model}s = ${mapper}Mapper.list(dto);
        return ResultUtil.success();
    }

    @Override
    public Result update${Model}(Integer id, ${Model}UpdateDTO dto) {
        ${Model} ${model} = ${mapper}Mapper.selectById(id);
        if(${model} != null) {
            //TODO 设值

            if(${mapper}Mapper.updateById(${model}) == 1) {
                return ResultUtil.success();
            }
        }
        return ResultUtil.error(ResultEnum.FAILURE);
    }

}